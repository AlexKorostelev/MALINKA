{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aleksei/elbrus/MALINKA/client/src/components/Cabinet/MaterialComponents/Light/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-console */\nimport React from 'react';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(() => ({\n  toggle: {\n    display: 'grid',\n    justifyItems: 'start',\n    gridGap: '10px',\n    direction: 'rtl',\n    gridTemplateColumns: '1fr auto'\n  },\n  track: {\n    backgroundColor: 'gray'\n  }\n}));\nexport default function SwitchesGroup() {\n  _s();\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    first: false,\n    second: false,\n    third: false\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  const clickHandlerLight = event => {\n    const requestOptionsOn = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        command: 'включить свет'\n      })\n    }; // eslint-disable-next-line no-unused-vars\n\n    const requestOptionsOff = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        command: 'выключить свет'\n      })\n    };\n\n    if (event.target.checked) {\n      fetch('http://192.168.1.53:3333/', requestOptionsOn).then(response => response.json()).then(data => console.log(data));\n    } else {\n      fetch('http://192.168.1.53:3333/', requestOptionsOff).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n\n  const clickHandlerSound = event => {\n    const requestOptionsOn = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        command: 'включить музыку'\n      })\n    }; // eslint-disable-next-line no-unused-vars\n\n    const requestOptionsOff = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        command: 'выключить музыку'\n      })\n    };\n\n    if (event.target.checked) {\n      fetch('http://192.168.1.53:3333/', requestOptionsOn).then(response => response.json()).then(data => console.log(data));\n    } else {\n      fetch('http://192.168.1.53:3333/', requestOptionsOff).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      component: \"fieldset\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u041F\\u0440\\u0438\\u0445\\u043E\\u0436\\u0430\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: state.first,\n            onChange: handleChange,\n            name: \"first\",\n            classes: {\n              track: classes.track\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this),\n          label: \"\\u041B\\u044E\\u0441\\u0442\\u0440\\u0430\",\n          labelPlacement: \"start\",\n          className: classes.toggle,\n          onClick: clickHandlerLight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: state.second,\n            onChange: handleChange,\n            name: \"second\",\n            classes: {\n              track: classes.track\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this),\n          label: \"\\u041C\\u0443\\u0437\\u044B\\u043A\\u0430\",\n          labelPlacement: \"start\",\n          className: classes.toggle,\n          onClick: clickHandlerSound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: state.third,\n            onChange: handleChange,\n            classes: {\n              track: classes.track\n            },\n            name: \"third\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this),\n          label: \"\\u0413\\u0438\\u0440\\u043B\\u044F\\u043D\\u0434\\u0430\",\n          labelPlacement: \"start\",\n          className: classes.toggle,\n          onClick: clickHandlerSound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SwitchesGroup, \"wJsVIOKWwu8CQQsBJuQOGU98MOc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SwitchesGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwitchesGroup\");","map":{"version":3,"sources":["/Users/aleksei/elbrus/MALINKA/client/src/components/Cabinet/MaterialComponents/Light/index.js"],"names":["React","FormControl","FormGroup","FormControlLabel","Switch","makeStyles","useStyles","toggle","display","justifyItems","gridGap","direction","gridTemplateColumns","track","backgroundColor","SwitchesGroup","classes","state","setState","useState","first","second","third","handleChange","event","target","name","checked","clickHandlerLight","requestOptionsOn","method","headers","body","JSON","stringify","command","requestOptionsOff","fetch","then","response","json","data","console","log","clickHandlerSound"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport './style.css';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  toggle: {\n    display: 'grid',\n    justifyItems: 'start',\n    gridGap: '10px',\n    direction: 'rtl',\n    gridTemplateColumns: '1fr auto',\n  },\n  track: {\n    backgroundColor: 'gray',\n  },\n}));\n\nexport default function SwitchesGroup() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    first: false,\n    second: false,\n    third: false,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const clickHandlerLight = (event) => {\n    const requestOptionsOn = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ command: 'включить свет' }),\n    };\n    // eslint-disable-next-line no-unused-vars\n    const requestOptionsOff = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ command: 'выключить свет' }),\n    };\n    if (event.target.checked) {\n      fetch('http://192.168.1.53:3333/', requestOptionsOn)\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    } else {\n      fetch('http://192.168.1.53:3333/', requestOptionsOff)\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    }\n  };\n\n  const clickHandlerSound = (event) => {\n    const requestOptionsOn = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ command: 'включить музыку' }),\n    };\n    // eslint-disable-next-line no-unused-vars\n    const requestOptionsOff = {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ command: 'выключить музыку' }),\n    };\n    if (event.target.checked) {\n      fetch('http://192.168.1.53:3333/', requestOptionsOn)\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    } else {\n      fetch('http://192.168.1.53:3333/', requestOptionsOff)\n        .then((response) => response.json())\n        .then((data) => console.log(data));\n    }\n  };\n  return (\n    <>\n      <FormControl component=\"fieldset\">\n        <h3>Прихожая</h3>\n        <FormGroup>\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={state.first}\n                onChange={handleChange}\n                name=\"first\"\n                classes={{\n                  track: classes.track,\n                }}\n              />\n            )}\n            label=\"Люстра\"\n            labelPlacement=\"start\"\n            className={classes.toggle}\n            onClick={clickHandlerLight}\n          />\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={state.second}\n                onChange={handleChange}\n                name=\"second\"\n                classes={{\n                  track: classes.track,\n                }}\n              />\n            )}\n            label=\"Музыка\"\n            labelPlacement=\"start\"\n            className={classes.toggle}\n            onClick={clickHandlerSound}\n          />\n          <FormControlLabel\n            control={(\n              <Switch\n                checked={state.third}\n                onChange={handleChange}\n                classes={{\n                  track: classes.track,\n                }}\n                name=\"third\"\n              />\n            )}\n            label=\"Гирлянда\"\n            labelPlacement=\"start\"\n            className={classes.toggle}\n            onClick={clickHandlerSound}\n          />\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}