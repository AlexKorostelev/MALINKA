{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/aleksei/elbrus/MALINKA/client/src/components/StateOfMalinka/StateOfMalinka.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-underscore-dangle */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // import StateCard from '../StateCard/StateCard';\n\nimport io from 'socket.io-client';\nimport StateCard2 from '../StateCard/StateCard2';\nimport { addPinSettings } from '../../redux/action-creators/actions';\nconst socket = io('http://localhost:9999', {\n  transports: ['websocket']\n});\nexport default function StateOfMalinka() {\n  _s();\n\n  const pinSettings = useSelector(state => state.pinSettings);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    (async () => {\n      const resp = await fetch('http://localhost:3001/data');\n      const data = await resp.json();\n      dispatch(addPinSettings(data));\n    })();\n  }, []);\n\n  if (pinSettings.length) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: pinSettings.map(el => /*#__PURE__*/_jsxDEV(StateCard2, {\n        state: el.state,\n        name: el.name\n      }, el._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0421\\u043E\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), \"\\u041F\\u043E\\u043A\\u0430 \\u043D\\u0435\\u0438\\u0437\\u0432\\u0435\\u0441\\u0442\\u043D\\u043E\"]\n  }, void 0, true);\n}\n\n_s(StateOfMalinka, \"jLFakmqurMghzH621rAwbW2qFVI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = StateOfMalinka;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateOfMalinka\");","map":{"version":3,"sources":["/Users/aleksei/elbrus/MALINKA/client/src/components/StateOfMalinka/StateOfMalinka.js"],"names":["React","useEffect","useDispatch","useSelector","io","StateCard2","addPinSettings","socket","transports","StateOfMalinka","pinSettings","state","dispatch","resp","fetch","data","json","length","map","el","name","_id"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,SAASC,cAAT,QAA+B,qCAA/B;AAEA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAD,EACf;AAAEI,EAAAA,UAAU,EAAE,CAAC,WAAD;AAAd,CADe,CAAjB;AAGA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAMC,WAAW,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,WAAlB,CAA/B;AACA,QAAME,QAAQ,GAAGV,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAClB,KAAC,YAAY;AACP,YAAMY,IAAI,GAAG,MAAMC,KAAK,CAAC,4BAAD,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAnB;AACAJ,MAAAA,QAAQ,CAACN,cAAc,CAACS,IAAD,CAAf,CAAR;AACD,KAJL;AAKG,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIL,WAAW,CAACO,MAAhB,EAAwB;AACtB,wBACE;AAAA,gBACGP,WAAW,CAACQ,GAAZ,CAAiBC,EAAD,iBACf,QAAC,UAAD;AAEE,QAAA,KAAK,EAAEA,EAAE,CAACR,KAFZ;AAGE,QAAA,IAAI,EAAEQ,EAAE,CAACC;AAHX,SACOD,EAAE,CAACE,GADV;AAAA;AAAA;AAAA;AAAA,cADD;AADH,qBADF;AAWD;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAAA,kBADF;AAMD;;GAhCuBZ,c;UACFN,W,EACHD,W;;;KAFKO,c","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import StateCard from '../StateCard/StateCard';\nimport io from 'socket.io-client';\nimport StateCard2 from '../StateCard/StateCard2';\n\nimport { addPinSettings } from '../../redux/action-creators/actions';\n\nconst socket = io('http://localhost:9999',\n  { transports: ['websocket'] });\n\nexport default function StateOfMalinka() {\n  const pinSettings = useSelector((state) => state.pinSettings);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n(async () => {\n      const resp = await fetch('http://localhost:3001/data');\n      const data = await resp.json();\n      dispatch(addPinSettings(data));\n    })();\n  }, []);\n\n  if (pinSettings.length) {\n    return (\n      <>\n        {pinSettings.map((el) => (\n          <StateCard2\n            key={el._id}\n            state={el.state}\n            name={el.name}\n          />\n        ))}\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h3>Состояние</h3>\n      Пока неизвестно\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}